<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:baseViewModel="clr-namespace:TestApp.ViewModels.Base"
             xmlns:behaviors="clr-namespace:TestApp.Behaviors"
             xmlns:commonModels="clr-namespace:TestApp.Models.Common"
             xmlns:effects="clr-namespace:TestApp.Effects"
             mc:Ignorable="d"
             baseViewModel:ViewModelLocator.AutoWireViewModel="True"
             x:Class="TestApp.App">
    <Application.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/LightTheme.xaml" />
                <ResourceDictionary Source="Themes/Fonts.xaml" />
            </ResourceDictionary.MergedDictionaries>
          
            <!-- Constants-->
            <x:Double x:Key="MinimumTappableWidth">42</x:Double>
            <x:Double x:Key="StandardButtonHeight">36</x:Double>
            
            <!--//RIGM: Make it themed!-->
            <Color x:Key="PopupColor">#FFFFFF</Color>
            

            <!-- Styles-->

            <!--<Style TargetType="Label">
                <Setter Property="FontFamily" Value="{StaticResource Key=RobotoRegular}"></Setter>
            </Style>-->
            
            
            <!--Buttons-->
            <Style TargetType="Button" x:Key="BaseButton">
                <Setter Property="BorderWidth" Value="1"/>
                <Setter Property="CornerRadius" Value="1"/>
            </Style>
            
            <Style TargetType="Button" BasedOn="{x:StaticResource BaseButton}" x:Key="PrimaryButton">
                <Setter Property="BackgroundColor" Value="{x:StaticResource PrimaryButtonBackgroundColor}"/>
                <Setter Property="BorderColor" Value="{x:StaticResource PrimaryButtonBorderColor}"/>
                <Setter Property="TextColor" Value="{x:StaticResource PrimaryButtonTextColor}"/>
            </Style>      
            
            <Style TargetType="Button" BasedOn="{x:StaticResource BaseButton}" x:Key="SecondaryButton">
                <Setter Property="BackgroundColor" Value="{x:StaticResource SecondaryButtonBackgroundColor}"/>
                <Setter Property="BorderColor" Value="{x:StaticResource SecondaryButtonBorderColor}"/>
                <Setter Property="TextColor" Value="{x:StaticResource SecondaryButtonTextColor}"/>
            </Style>
            
            <!-- Tabbed Pages-->
            <Style TargetType="TabbedPage">
                <Style.Setters>
                    <Setter Property="effects:ThemedIndicatorEffectWrapper.SelectedIndicatorThickness" Value="4" />
                    <Setter Property="effects:ThemedIndicatorEffectWrapper.SelectedIndicatorColor" Value="{StaticResource SelectedTabIndicatorColor}"/>
                    <Setter Property="BarBackgroundColor" Value="{StaticResource BarBackgroundColor}"/>
                </Style.Setters>
            </Style>

            <!-- Cards Style-->
            <Style TargetType="Frame" Class="CardFrameClass">
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Margin" Value="10"/>
            </Style>

            <Style TargetType="Label" Class="CardTitleLabelClass">
                <Setter Property="MaxLines" Value="2"/>
                <Setter Property="LineBreakMode" Value="TailTruncation"/>
                <!--<Setter Property="LineHeight" Value="0.01"/>-->
                <Setter Property="FontSize" Value="Medium"/>
                <!--<Setter Property="FontAttributes" Value="Bold"/>-->
            </Style>

            <Style TargetType="Label" Class="CardSubtitleLabelClass">
                <Setter Property="FontSize" Value="Body"/>
                <Setter Property="LineBreakMode" Value="NoWrap"/>
                <Setter Property="TextColor" Value="{StaticResource CardSubtitleTextColor}"/>
            </Style>
            


            <!-- Uniform Options Group Style -->
            <Style TargetType="Label" x:Key="OptionGroupGridLabel">
                <Setter Property="LineBreakMode" Value="NoWrap"/>
                <Setter Property="MaxLines" Value="1"/>
                <Setter Property="HorizontalTextAlignment" Value="Center"/>
            </Style>

            <Style TargetType="Frame" x:Key="OptionGroupGridFrame">
                <Setter Property="BorderColor" Value="{StaticResource BlackColor}"/>
                <Setter Property="CornerRadius" Value="0"/>
                <Setter Property="Padding" Value="0,10,0,10"/>

                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource SecondaryColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{StaticResource WhiteColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <VisualState.Setters>

                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Focused">
                                <VisualState.Setters>

                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <DataTemplate x:Key="OptionGroupTemplate" x:DataType="{x:Type commonModels:SimpleTagElement}">
                <Frame Style="{StaticResource OptionGroupGridFrame}">
                    <Label Style="{StaticResource OptionGroupGridLabel}"
                                Text="{Binding Body}"/>

                    <Frame.Behaviors>
                        <behaviors:OnTapAnimationBehavior 
                                    FirstStepScaleTo="0.98" 
                                    FirstStepDurationMilliseconds="50"
                                    SecondStepDurationMilliseconds="50"
                                    TransitionDelayMilliseconds="10"
                                    SecondStepScaleTo="1" 
                                    x:Name="OnSelectionAnimation"/>
                    </Frame.Behaviors>
                </Frame>
            </DataTemplate>

        </ResourceDictionary>
    </Application.Resources>
</Application>